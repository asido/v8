load("@io_bazel_rules_go//go:def.bzl", "go_library")

cc_library(
    name = "v8_libs",
    srcs = [] + select({
        "@bazel_tools//src/conditions:darwin": [
            "libv8_mac/libv8_monolith.a",
        ],
        "//conditions:default": [
            "libv8_linux/libv8_monolith.a",
        ],
    }),
)

go_library(
    name = "go_default_library",
    srcs = [
        "doc.go",
        "kind.go",
        "v8.go",
        "v8_create.go",
        "v8_c_bridge.cc",
        "v8_c_bridge.h",
        "include/v8-inspector-protocol.h",
        "include/v8-inspector.h",
        "include/v8-platform.h",
        "include/v8-profiler.h",
        "include/v8-testing.h",
        "include/v8-util.h",
        "include/v8-value-serializer-version.h",
        "include/v8-version-string.h",
        "include/v8-version.h",
        "include/v8.h",
        "include/v8config.h",
        "include/libplatform/libplatform-export.h",
        "include/libplatform/libplatform.h",
        "include/libplatform/v8-tracing.h",
    ],
    cxxopts = ["-fno-rtti -fpic -std=c++11"],
    clinkopts = [
        "-pthread -lv8_monolith"
    ] + select({
        "@bazel_tools//src/conditions:darwin": [
            "-Lexternal/com_github_asido_v8/libv8_mac"
        ],
        "//conditions:default": [
            "-Lexternal/com_github_asido_v8/libv8_linux"
        ],
    }),
    cdeps = [":v8_libs"],
    importpath = "github.com/asido/v8",
    cgo = True,
    visibility = ["//visibility:public"],
)
